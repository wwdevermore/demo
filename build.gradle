buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '1.5.4.RELEASE'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.14'
    compile('org.webjars.requirejs:2.2.0')
    compile('org.webjars.npm:stompjs:2.3.3')
    compile group: 'org.webjars', name: 'webjars-locator', version: '0.32'
    compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.32'
    compile group: 'org.webjars', name: 'jquery', version: '3.2.1'
    compile group: 'org.webjars', name: 'bootstrap', version: '3.3.5'
	compile group: 'org.springframework', name: 'springloaded', version: '1.2.3.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.5.4.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '1.5.3.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j', version: '1.3.2.RELEASE'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
	compile group: 'log4j', name: 'log4j', version: '1.2.17'
	compile group: 'com.alibaba', name: 'fastjson', version: '1.2.32'
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.2.3.RELEASE'
	compile 'org.apache.httpcomponents:httpclient:4.5.3'
	//webservice服务相关
	compile("org.springframework.ws:spring-ws-core")
	compile(files(genJaxb.classesDir).builtBy(genJaxb))
	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
}

//从WSDL生成JAVA CLASSES，gradle的配置方式比MAVEN复杂，原因是没有插件，所以使用ant
task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	ext.schema = "http://demo.1hai.cn/ssologin/loginservice.asmx?op=LoginV2"

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			xjc(destdir: sourcesDir, schema: schema,
					package: "hello.wsdl") {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}

			javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
					debugLevel: "lines,vars,source",
					classpath: configurations.jaxb.asPath) {
				src(path: sourcesDir)
				include(name: "**/*.java")
				include(name: "*.java")
			}

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: "**/*.java")
				}
			}
		}
	}
}